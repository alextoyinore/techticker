
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user has one of several roles
    function hasAnyRole(roles) {
      // Use the 'in' operator for cleaner role checking
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in roles;
    }

    // --- Publicly Readable & Admin Writable Collections ---

    // Articles can be read by public if published, or by staff anytime.
    // Staff can write.
    match /articles/{articleId} {
        allow read: if resource.data.status == 'Published' || hasAnyRole(['admin', 'editor', 'writer']);
        allow write: if hasAnyRole(['admin', 'editor', 'writer']);
    }

    // Pages can be read by public if published, or by staff anytime.
    // Staff can write.
    match /pages/{pageId} {
        allow read: if resource.data.status == 'Published' || hasAnyRole(['admin', 'editor']);
        allow write: if hasAnyRole(['admin', 'editor']);
    }

    // Comments can be read by public if approved, or by staff anytime.
    // Any authenticated user can create a comment (for moderation).
    // Staff can moderate (update/delete).
    match /comments/{commentId} {
        allow read: if resource.data.status == 'Approved' || hasAnyRole(['admin', 'editor']);
        allow create: if request.auth != null;
        allow update, delete: if hasAnyRole(['admin', 'editor']);
    }

    // --- Admin-Only Collections ---

    // Layouts are for site structure, only readable/writable by admins/editors.
    match /layouts/{layoutId} {
        allow read, write: if hasAnyRole(['admin', 'editor']);
    }

    // Widgets are for site structure, only readable/writable by admins/editors.
    match /widgets/{widgetId} {
        allow read, write: if hasAnyRole(['admin', 'editor']);
    }

    // Categories can be read by any content creator, but only managed by admins.
    match /categories/{categoryId} {
        allow read: if hasAnyRole(['admin', 'editor', 'writer']);
        allow write: if hasAnyRole(['admin']);
    }

    // Users can manage their own data.
    // Admins/Superadmins can manage any user's data.
    match /users/{userId} {
      allow read, write: if request.auth.uid == userId || hasAnyRole(['admin', 'superadmin']);
    }
  }
}
