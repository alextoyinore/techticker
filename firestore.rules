
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin roles
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'superadmin'];
    }

    // By default, deny all reads and writes
    match /{document=**} {
      allow read, write: if false;
    }

    // Users can read their own data and admins can read all user data.
    // Users can create their own document, but only admins can update roles.
    match /users/{userId} {
      allow get: if request.auth != null && request.auth.uid == userId;
      allow list: if request.auth != null && isAdmin();
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update: if request.auth != null && isAdmin();
    }
    
    // Any authenticated user can read categories, but only admins can manage them.
    match /categories/{categoryId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && isAdmin();
    }
    
    // Anyone can read comments. Authenticated users can create them.
    // Only admins can moderate (update/delete) comments.
    match /comments/{commentId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && isAdmin();
    }

    // Any authenticated user can read widgets, but only admins can manage them.
    match /widgets/{widgetId} {
        allow read: if request.auth != null;
        allow write: if request.auth != null && isAdmin();
    }
  }
}
