
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSuperAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'superadmin';
    }
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'superadmin'];
    }
    function isEditor() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['editor', 'admin', 'superadmin'];
    }
     function isWriter() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['writer', 'editor', 'admin', 'superadmin'];
    }
    function isSignedIn() {
      return request.auth != null;
    }
    function isOwner(resource) {
      return request.auth.uid == resource.data.authorId;
    }

    // Collections
    match /users/{userId} {
      // A user can create, read, and update their own document.
      allow create, read, update: if request.auth.uid == userId;

      // Admins and superadmins can list all users.
      allow list: if isAdmin();
      
      // Superadmins can do anything to any user.
      allow get, write: if isSuperAdmin();
    }

    match /articles/{articleId} {
      allow read: if resource.data.status == 'Published' || isWriter();
      allow create: if isWriter();
      allow update, delete: if isOwner(resource) || isEditor();
    }
    
    match /pages/{pageId} {
      allow read: if resource.data.status == 'Published' || isWriter();
      allow create: if isWriter();
      allow update, delete: if isOwner(resource) || isEditor();
    }

    match /comments/{commentId} {
      allow read: if resource.data.status == 'Approved' || isEditor();
      allow create: if isSignedIn();
      allow update: if isEditor();
      allow delete: if isAdmin();
    }

    match /categories/{categoryId} {
        allow read: if isSignedIn();
        allow create, update, delete: if isAdmin();
    }

    match /widgets/{widgetId} {
        allow read, create, update, delete: if isEditor();
    }

    match /layouts/{layoutId} {
        allow read, create, update, delete: if isEditor();
    }
    
    match /mail/{docId} {
      allow read: if false; // No one can read emails from the client
      allow write: if isSuperAdmin(); // Only superadmins can trigger emails
    }
  }
}
